extends layout

block content
  //if not signed up, show landing page
  //if signed up, show key stats on home page
  if !user
    script.
      function signup() {
      document.getElementById("signup-form").submit();
      }
      window.onload = function start(){
      //allow submitting with enter key - Signup Form
      $('#signup-form').keydown(function(e) {
      var key = e.which;
      if (key == 13) {
      // As ASCII code for ENTER key is "13"
      document.getElementById("signup-form").submit();
      }
      });
      }
    .row
      .container
        .row
          #welcome.container
            .col-sm-4.col-sm-offset-4
              h3 Free and simple weight tracking.
              //#subline.h4 See results with goal management, weight statistics, and an interactive progress chart.
          #signup.col-sm-4.col-sm-offset-4
            form.form-horizontal(id='signup-form', action='/signup', method='POST')
              input(type='hidden', name='_csrf', value=_csrf)
              .form-group
                label(type='hidden').col-sm-3.control-label(for='email')
                input.form-control(type='email', name='email', id='email', placeholder='Email', autofocus, required)
              .form-group
                label(type='hidden').col-sm-3.control-label(for='password')
                input.form-control(type='password', name='password', id='password', placeholder='Password', required)
              //.form-group
                label(type='hidden').col-sm-3.control-label(for='confirmPassword')
                input.form-control(type='password', name='confirmPassword', id='confirmPassword', placeholder='Confirm Password', required)
              #signup.form-group
                #signup_button.btn.btn-md.btn-hover.btn-default(onclick='signup()') Sign Up
              p.paragraph(style='text-align:center;')
                | Already a user?
                br
                |
                a(href='https://www.mescale.co/login') Log in here
              br
              
        #landing.container   
          .row      
            .col-md-6
        
              #landing.h3.subheading
                | Set a goal, see progress
              p.paragraph(style='font-size:110%;line-height:1.5')
                | Let us know if you want to 
                span gain
                | , 
                span lose
                |, or 
                span maintain
                |  weight. 
                | We'll guide your progress through visuals and summary statistics.
                br
                br
              img.img-fluid(src='/mescale_scale.png', alt='Mescale', style='max-width:50%;height:auto;border:none;text-align: center;')  
            .col-md-6
              br
              br
              img.img-fluid(src='/mescale_landing_gif_july_compress.gif', alt='Mescale', style='max-width:100%; height:auto;border:#2196f3;border-style: solid !important;border-width: thin !important;')

              //h3.subheading
                | Instant Handles
              //p.paragraph
                | Naming your brand has never been soooo easy! With Launchaco you can instantly search for twitter, facebook, medium, and instagram handles.
      .container
        .row
          //#welcome.container
            br
            img(src='http://erikrood.com/Utils/mescale_weight.png', class='img-fluid', alt='Mescale', style='max-width:95%; height:auto;')
          #subline.container
            br
            br
            br  
            br
            br  
          
            p.home__subline
              span Quick entry
              | ,
              |
              span analytics
              | , and
              |
              span goal management
              |  help you stay on track.
      #landing.container   
        .row   
          br  
          br
          .col-md-6
            br  
            #landing.h3.subheading
              | Available everywhere
            p.paragraph(style='font-size:110%;line-height:1.5')
              | No need to install another app on your phone. Log your weight through 
              span desktop
              |  , 
              span mobile
              |  , or 
              span text message
              |. 


          .col-md-6
            br
            #landing.h3.subheading
              | Let us do the math
            p.paragraph(style='font-size:110%;line-height:1.5')
              | Stats like 
              span weekly weight change
              |, 
              span weight loss needed/week
              |, and 
              span caloric deficit needed/week
              |  help keep your goals in sight. 
              | We digest your weight information and turn it into beautiful summaries you can read at a glance.
      //#landing.container
        br
        br  
        img.img-fluid(src='/mescale_landing_gif_july_compress.gif', alt='Mescale', style='max-width:100%; height:auto;border:#2196f3;border-style: solid !important;border-width: thin !important;')
        
      #landing.container   
        .row   
          br
          br  
          #signup.form-group
            #signup_button.btn.btn-md.btn-hover.btn-default(onclick="location.href='https://www.mescale.co/signup'") Track my weight!

  else
    head
      //jquery
      script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js')
      //moment
      script(src='https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.js')

      //functions
      script(type='text/javascript').
        var CSRF_HEADER = 'x-csrf-token';
        function change_table() {
          /*goal piece*/
          //gettting json values
          var goals_json = document.getElementById("goals_json").value;
          var goals_json_value1 = JSON.parse(goals_json);
          //console.log(goals_json_value1.goal)
          var enter_goals = document.getElementById("enter_goals");
          var goal_start = document.getElementById("goal_start");
          var goal_weight = document.getElementById("goal_weight");
          var start_weight = document.getElementById("start_weight");
          var goal_date = document.getElementById("goal_date");
          var units = document.getElementById('weight_units');

          //need count in here to take the last value entered in goals
          var count = Object.keys(goals_json_value1.goal).length;
          var weight_count = Object.keys(goals_json_value1.weight).length;
          console.log(weight_count)
          if(count != 0){
          goal_start.value = (goals_json_value1.goal[count-1].goal_start)//.substring(0,10);
          goal_weight.value = goals_json_value1.goal[count-1].goal_weight;
          start_weight.value = goals_json_value1.goal[count-1].start_weight;
          goal_date.value = goals_json_value1.goal[count-1].goal_date;
          units.value = goals_json_value1.goal[count-1].weight_units;
          //progress = (goal-current - index 0 since sorted already)/(goal-start)
          if(weight_count != 0) {
            //global goal weight for line chart etc
            //set progress % var
            var progress_goal_stat = 1-(Math.abs((goal_weight.value)-(goals_json_value1.weight[0].weight))/Math.abs((goal_weight.value)-(start_weight.value)))

            //push goal progress update below progress bar
            document.getElementById("goal_progress_update").innerHTML += "&nbsp&nbsp;" +
            "<p style='font-size:110%;line-height:1.5'>" + 
            
            "<span style='background-color:#d6ffd8;color:#333;'>"+
            (Math.round(progress_goal_stat * 100) + '%')+"</span>"+ 
            ' to goal weight of '+ 
            
            "<span style='background-color:#d6ffd8;color:#333;'>"+goal_weight.value+
            units.value+"</span>"+
            
            ', based on most recent weight of '+
            "<span style='background-color:#d6ffd8;color:#333;'>"+goals_json_value1.weight[0].weight+units.value+"</span>"+
            
            '.'+"</p>";

            //update #progresscontainer bar
            var bar = new ProgressBar.Line(progress_container, {
            strokeWidth: 4,
            easing: 'easeInOut',
            duration: 1600,
            color: '#2196f3',
            trailColor: '#eee',
            trailWidth: 1,
            svgStyle: {width: '100%', height: '100%'},
            text: {
            style: {
            // Text color.
            // Default: same as stroke color (options.color)
            color: '#2196f3',
            position: 'relative',
            right: '0',
            top: '30px',
            padding: 0,
            margin: 0,
            transform: null
            },
            autoStyleContainer: false
            },
            from: {color: '#FFEA82'},
            to: {color: '#ED6A5A'},
            step: (state, bar) => {
            bar.setText(Math.round(bar.value() * 100) + '%');
            }
            });
            bar.text.style.fontFamily = '"Raleway", Helvetica, sans-serif';
            bar.text.style.fontSize = '2rem';
            bar.animate(progress_goal_stat);  // Number from 0.0 to 1.0
            //console.log(goal_weight.value)
            //console.log((goals_json_value1.weight[0].weight))

              }
                }
          else{
            //if goals are empty open the block and prompt user to enter
            var settings_goals_block = document.getElementById('goals_form');
            settings_goals_block.style.display = 'block';
            document.getElementById("start_here_goals").innerHTML +=
            "<p style='font-size:110%;line-height:1.5;color:#ff5722;font-weight:bold;'>" + 
            'Start here - save a goal to track against (lose, gain, or maintain weight).'+"</p>"+
            "<p style='font-size:90%;line-height:1.5;'>" + 
            "Don't want to track against a goal? Just select your units (lbs or kgs) and click 'Update Goals'!"+"</p>";
            console.log("empty")
          }
          //console.log(goals_json_value1.goal);
          if(jQuery("label[for='start_weight_label']").html('Start Weight'+' ('+units.value+'):') != undefined){
            jQuery("label[for='start_weight_label']").html('Start Weight'+' ('+units.value+'):');
          }
          else {
            jQuery("label[for='start_weight_label']").html('Start Weight')
          }

          if(jQuery("label[for='goal_weight_label']").html('Goal Weight'+' ('+units.value+'):') != undefined){
            jQuery("label[for='goal_weight_label']").html('Goal Weight'+' ('+units.value+'):')
          }
          else {
            jQuery("label[for='goal_weight_label']").html('Goal Weight:')
          }
          //Weight label form
          jQuery("label[for='weight_label']").html('Weight'+' ('+units.value+'):');
          //console.log(goals_json_value1.goal)

        };

        function change_weight() {
          /*weight piece*/
          //gettting json values
          var weight = document.getElementById("enter_weight_actual");
          //default entry date to show today
          var offset = new Date().getTimezoneOffset();
          var date_stg1 = new Date();// gmt+2, == -120 (minutes)
          var date_stg2 = date_stg1 + Math.abs(offset*60000)
          var date_stg3 = new Date(date_stg2)
          date_stg3.setDate(date_stg3.getDate());

          console.log(date_stg3)
          document.getElementById("entry_date").valueAsDate = date_stg3
        };

        window.onload = function start(){

            change_table();
            change_weight();

            //allow submitting with enter key - Goals Form
            $('#goals_form').keydown(function(e) {
            var key = e.which;
            if (key == 13) {
            // As ASCII code for ENTER key is "13"
            document.getElementById("goals_form").submit();
            }
            });


            //allow submitting with enter key - Weight Form
            $('#weight_form').keydown(function(e) {
            var key = e.which;
            if (key == 13) {
            // As ASCII code for ENTER key is "13"
            document.getElementById("weight_form").submit();
            }
            });

            //if goals blank, will need to run goal_show_hide() and prompt to enter goals
            //goal_show_hide();
        };

        function goal_show_hide() {
          var x = document.getElementById('goals_form');
          if (x.style.display === 'none') {
          x.style.display = 'block';
          } else {
          x.style.display = 'none';
            }
          }
        function settings_show_hide() {
          var x = document.getElementById('settings_form');
          if (x.style.display === 'none') {
          x.style.display = 'block';
          } else {
          x.style.display = 'none';
            }
          }
        function enter_goals() {
          document.getElementById("goals_form").submit();

        }
        function enter_weight() {
        document.getElementById("weight_form").submit();
        }


    //************************************************************//    
    //************************Begin pug**************************//
    //***********************************************************//
    
    br
    br
    //just remove this and bump indent out 2 levels to stretch whole screen  
    .col-lg-offset-1.col-lg-10   
        .container
          #lead_row.row
            span#start_here_goals.Price_num(style='', <='', span='')
        btn.btn-md.btn-hover.btn-default(onclick='goal_show_hide()') Settings/Goals
          input(type='hidden', id="goals_json", value= JSON.stringify(locals))
        form(style='display:none',id="goals_form", name="goals_form").form-horizontal(action='/postGoals', method='POST')
          br
          input(type='hidden', name='_csrf', value=_csrf)
          .form-group
            label.col-sm-3.control-label(for='select_weight') Select units:
            .col-sm-2
              select.form-control(type = 'text', name='weight_units', id='weight_units')
                option lbs
                |
                option kg
                |
          .form-group
            label.col-sm-3.control-label(for='location') Goal Start Date:
            .col-sm-7
              input.form-control(type='date' name='goal_start', id='goal_start')
          .form-group
            label.col-sm-3.control-label(for='start_weight_label')
            .col-sm-7
              input.form-control(type='number', step="any", min="0" name='start_weight', id='start_weight')
          .form-group
            label.col-sm-3.control-label(for='goal_weight_label')
            .col-sm-7
              input.form-control(type='number', step="any", min="0" name='goal_weight', id='goal_weight')
          .form-group
            label.col-sm-3.control-label(for='website') Target Date:
            .col-sm-7
              input.form-control(type='date', name='goal_date', id='goal_date')
          .form-group
            .col-sm-offset-3.col-sm-4
              #submit.btn.btn-md.btn-hover.btn-default(onclick='enter_goals()') Update Goals

        br
        br
        br
        h4 Enter weight
        br
        br
        form.form-horizontal(id="weight_form", action='/postWeights', method='POST')
          input(type='hidden', name='_csrf', value=_csrf)
          .form-group
            label.col-sm-3.control-label(for='weight_label')
            .col-sm-7
              input.form-control(type='number', step="any", min="0", name='enter_weight_actual', id='enter_weight_actual')
          .form-group
            label.col-sm-3.control-label(for='website') Date:
            .col-sm-7
              input.form-control(type='date', name='entry_date', id='entry_date')
          .form-group
            .col-sm-offset-3.col-sm-4
              #submit.btn.btn-md.btn-hover.btn-default(onclick='enter_weight()') Enter Weight
        br
        br
        h4 Progress to goal
        #progress_container
          //import progressbar -- docs: https://kimmobrunfeldt.github.io/progressbar.js/
          script(src='https://cdnjs.cloudflare.com/ajax/libs/progressbar.js/1.0.1/progressbar.min.js')
            
        br
        br
        br
        .container
          #lead_row.row
            span#goal_progress_update.Price_num(style='', <='', span='')

        br
        h4 Summary statistics
        br
        .container
          #lead_row.row
            #Price_group.col-md-4
              span(style='font-size:120%;')   7-day average:
              br
              span#week_avg.Price_num(style='font-size:110%;', <='', span='')
            #Prev_wk_close.col-md-4
              span(style='font-size:120%;')   10-day average:
              br
              span#month_avg.Prev_wk_close_num(style='font-size:110%;', <='', span='')
            #wk_high.col-md-4
              span(style='font-size:120%;')   All-time average:
              br
              span#all_time_avg(style='font-size:110%;', <='', span='')
            #wk_high.col-md-4
              span(style='font-size:120%;')   Weight rate needed to hit goal:
              br
              span#weight_rate_needed(style='font-size:110%;', <='', span='')
            #wk_high.col-md-4
              span(style='font-size:120%;')   Calorie deficit/surplus needed to hit goal:
              br
              span#cal_rate_needed(style='font-size:110%;', <='', span='')

        br
        br
        br
        br
        h4 Progress chart (interactive)
        br
        //this is where the plotly chart will sit
        .div(id="tester")
          //style="min-width:100%"
        .container
          #lead_row.row
            span#chart_display_prompt.Price_num(style='', <='', span='')
        
        
        
        
        //**************************************************************************//
        //********************************SCRIPTS***********************************//
        //**************************************************************************//
        
        //plotly import, no account needed!
        script(src='https://cdn.plot.ly/plotly-latest.min.js')
        //plotly docs: https://plot.ly/javascript/getting-started/
        script.
          //console.log(db.weight.find().sort({"date":-1}));
          function get_pretty_date(value){
            var start_date = new Date(value)
            //start_date.setDate(start_date.getDate()+1);
            var s_year = start_date.getFullYear();
            var s_month = start_date.getMonth()+1;
            if(s_month <= 9)
                s_month = '0'+s_month;
            var s_day= start_date.getDate();
            if(s_day <= 9)
                s_day = '0'+s_day;
            var s_prettyDate = s_year +'-'+s_month +'-'+ s_day
            return s_prettyDate

          };
          var y_weight = [];
          var x_date = [];

          var y_goal = [];

          //bringing in the html element
          TESTER = document.getElementById('tester');
          var goals_json = document.getElementById("goals_json").value;
          var goals_json_value1 = JSON.parse(goals_json);
          var count_1 = Object.keys(goals_json_value1.goal).length;
          var y_goal_stg = (goals_json_value1.goal[count_1-1].goal_weight)
          for (var i = 0; i < goals_json_value1.weight.length; i++){

            var x_date_stg = get_pretty_date(goals_json_value1.weight[i].date)
            y_weight.push(goals_json_value1.weight[i].weight);
            x_date.push(x_date_stg);
            y_goal.push(y_goal_stg);


          }
          var trace_0 = {
              x: x_date,
              y: y_goal,
              mode: 'lines',

              line: {
              dash: 'dot',
              color: '#17bf63',
              width: 2
                  },
              name: 'Goal Weight',
              type: "scatter",
            };

          var trace_1 = {
              x: x_date,
              y: y_weight,
              line: {
              color: 'rgb(33, 150, 243)',
              width: 2
                  },
              name: "Weight",
              type: "scatter",
            };
          
            var selectorOptions = {
              buttons: [{
                  step: 'month',
                  stepmode: 'backward',
                  count: 1,
                  label: '1m'
              }, {
                  step: 'month',
                  stepmode: 'backward',
                  count: 6,
                  label: '6m'
              }, {
                  step: 'year',
                  stepmode: 'todate',
                  count: 1,
                  label: 'YTD'
              }, {
                  step: 'year',
                  stepmode: 'backward',
                  count: 1,
                  label: '1y'
              }, {
                  step: 'all',
              }],
          };
          
          var data = [trace_0,trace_1];

          var layout = {
            xaxis: {
              rangeselector: selectorOptions,
              //rangeslider looks pretty cool but not sure it's useful
              //rangeslider: {},
              type: 'date',
              title: 'Date',
              showgrid: false,
              zeroline: false,
              showline: false,
              //tickformat: "%d %b %y",
              mirror: 'ticks',
              //gridcolor: '#bdbdbd',
              //gridwidth: 2,
              linecolor: '#636363',
              linewidth: 2

            },yaxis: {
              title: 'Weight',
              showgrid: false,
              zeroline: false,
              showline: false,
              mirror: 'ticks',
              //gridcolor: '#bdbdbd',
              //gridwidth: 2,
              linecolor: '#636363',
              linewidth: 2
              },
              title:'Weight trend'
            };
          //>4 records to display chart (otherwise it's pretty meaningless + axis looks screwy)
          if(goals_json_value1.weight.length>2){
            Plotly.plot( TESTER, data, layout)
            console.log('plotting')
          }
              else{
              Plotly.plot( TESTER, data, layout)
              console.log('plotting with warning')
              document.getElementById("chart_display_prompt").innerHTML +=
              "<p style='font-size:110%;line-height:1.5;color:#ff5722'>" + 'Log a few weights to get this chart looking pretty! You can filter, zoom, and download using buttons above.'+"</p>";
            }

        br
        br

        //***weight summary stats//***
        script.
          //***all time average//***
          var total = 0;
          for(var i = 0; i < goals_json_value1.weight.length; i++) {
            total += goals_json_value1.weight[i].weight;
          }
          var all_time_avg = (total / goals_json_value1.weight.length).toFixed(1);


          //***weight change/week to hit goal***//
          ////(goal-current)/[(goal date-current)/7]
          
          var goals_json = document.getElementById("goals_json").value;
          var goals_json_value1 = JSON.parse(goals_json);
          var count_1 = Object.keys(goals_json_value1.goal).length;
          var goal_stg = (goals_json_value1.goal[count_1-1].goal_weight)
          var goal_date_stg = (goals_json_value1.goal[count_1-1].goal_date)
          var units = (goals_json_value1.goal[count_1-1].weight_units)
          var current_weight = goals_json_value1.weight[0].weight
          var rightNow = new Date();
          var res = rightNow.toISOString().slice(0,10);
          
          ////bringing in moment here to get difference in days
          var goal_date = moment(goal_date_stg);
          var current_date = moment(res);
          var nbDays = current_date.diff(goal_date, 'days');
          
          var wt_change_per_week = (Math.round((current_weight - goal_stg)/((nbDays)/7)*100).toFixed(2))/100

          //***cal change/day to hit goal***//
          var cal_change_day = 0
          //for some reason if/else is crapping out here -- running two if statements instead  
          if(units=='kg'){
            //1 lb = .454 kg
            var cal_change_day = Math.round((wt_change_per_week*(1/.454)*3500)/7)
          }
          if(units=='lbs'){ 
            var cal_change_day = Math.round((wt_change_per_week*3500)/7)
          }
          
          
          ////***7 day (week) moving average//***

          var week_cutoff = new Date();
          week_cutoff.setDate(week_cutoff.getDate()-7);
          //convert to ISO so matches for comparison
          var n = week_cutoff.toISOString();

          var total_week = 0;
          var count_week = 0;
          for(var j = 0; j < goals_json_value1.weight.length; j++) {

            if(goals_json_value1.weight[j].date >= (n)){
              total_week += goals_json_value1.weight[j].weight;
              count_week += 1;

            }
            else {
              total_week += 0;
              //console.log(goals_json_value1.weight[j].date);
              //console.log(week_cutoff.setDate(week_cutoff.getDate()+7));
            }
          }
          var week_avg = (total_week / count_week).toFixed(1);


          ////***30-day moving average//***

          var month_cutoff = new Date();
          month_cutoff.setDate(month_cutoff.getDate()-30);
          //convert to ISO so matches for comparison
          var m = month_cutoff.toISOString();

          var total_month = 0;
          var count_month = 0;
          for(var k = 0; k < goals_json_value1.weight.length; k++) {

            if(goals_json_value1.weight[k].date >= (m)){
              total_month += goals_json_value1.weight[k].weight;
              count_month += 1;
              //console.log(count_month);
              //console.log(goals_json_value1.weight[k].date);
              //console.log(goals_json_value1.weight[k].weight);
            }
            else {
              total_month += 0;
              //console.log(goals_json_value1.weight[j].date);
              //console.log(month_cutoff.setDate(month_cutoff.getDate()+7));
            }
          }
          var month_avg = (total_month / count_month).toFixed(1);

          //push weight summary stats to html
          document.getElementById("week_avg").innerHTML += "&nbsp&nbsp;" + "<b style='color:#2196f3;line-height:3'>" + week_avg + "</b>";
          document.getElementById("month_avg").innerHTML += "&nbsp&nbsp;" + "<b style='color:#2196f3;line-height:3'>" + month_avg +"</b>";
          document.getElementById("all_time_avg").innerHTML += "&nbsp&nbsp;" + "<b style='color:#2196f3;line-height:3'>" + all_time_avg +"</b>";
          document.getElementById("weight_rate_needed").innerHTML += "&nbsp&nbsp;" + "<b style='color:#2196f3;line-height:3'>" 
          + wt_change_per_week +'/week'+ "</b>" ;
          document.getElementById("cal_rate_needed").innerHTML += "&nbsp&nbsp;" + "<b style='color:#2196f3;line-height:3'>" 
          + cal_change_day +'/day'+ "</b>" ;



          
          //google analytics
          (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
          (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
          })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
          ga('create', 'UA-101352995-1', 'auto');
          ga('send', 'pageview');
          // Google Code for Mescale Conversion Page
          var google_conversion_id = 847551239;
          var google_conversion_language = "en";
          var google_conversion_format = "3";
          var google_conversion_color = "ffffff";
          var google_conversion_label = "XtG6CJLSx3IQh7aSlAM";
          var google_remarketing_only = false;
        //conversions  
        script(type='text/javascript', src='//www.googleadservices.com/pagead/conversion.js')
        noscript
          div(style='display:inline;')
            img(height='1', width='1', style='border-style:none;', alt='', src='//www.googleadservices.com/pagead/conversion/847551239/?label=XtG6CJLSx3IQh7aSlAM&guid=ON&script=0')
